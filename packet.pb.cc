// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#include "packet.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf {

inline constexpr whiteboardPacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_{nullptr},
        version_{0u},
        packet_type_{0u},
        packet_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR whiteboardPacket::whiteboardPacket(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct whiteboardPacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR whiteboardPacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~whiteboardPacketDefaultTypeInternal() {}
  union {
    whiteboardPacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 whiteboardPacketDefaultTypeInternal _whiteboardPacket_default_instance_;
}  // namespace protobuf
static ::_pb::Metadata file_level_metadata_packet_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_packet_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_packet_2eproto = nullptr;
const ::uint32_t TableStruct_packet_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::protobuf::whiteboardPacket, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf::whiteboardPacket, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf::whiteboardPacket, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::protobuf::whiteboardPacket, _impl_.packet_type_),
    PROTOBUF_FIELD_OFFSET(::protobuf::whiteboardPacket, _impl_.packet_id_),
    PROTOBUF_FIELD_OFFSET(::protobuf::whiteboardPacket, _impl_.action_),
    ~0u,
    ~0u,
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::protobuf::whiteboardPacket)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf::_whiteboardPacket_default_instance_._instance,
};
const char descriptor_table_protodef_packet_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014packet.proto\022\010protobuf\032\014action.proto\"s"
    "\n\020whiteboardPacket\022\017\n\007version\030\001 \001(\r\022\023\n\013p"
    "acket_type\030\002 \001(\r\022\021\n\tpacket_id\030\003 \001(\r\022&\n\006a"
    "ction\030\004 \001(\0132\026.protobuf.PacketActionb\006pro"
    "to3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_packet_2eproto_deps[1] =
    {
        &::descriptor_table_action_2eproto,
};
static ::absl::once_flag descriptor_table_packet_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_packet_2eproto = {
    false,
    false,
    163,
    descriptor_table_protodef_packet_2eproto,
    "packet.proto",
    &descriptor_table_packet_2eproto_once,
    descriptor_table_packet_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_packet_2eproto::offsets,
    file_level_metadata_packet_2eproto,
    file_level_enum_descriptors_packet_2eproto,
    file_level_service_descriptors_packet_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_packet_2eproto_getter() {
  return &descriptor_table_packet_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_packet_2eproto(&descriptor_table_packet_2eproto);
namespace protobuf {
// ===================================================================

class whiteboardPacket::_Internal {
 public:
  using HasBits = decltype(std::declval<whiteboardPacket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_._has_bits_);
  static const ::protobuf::PacketAction& action(const whiteboardPacket* msg);
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf::PacketAction& whiteboardPacket::_Internal::action(const whiteboardPacket* msg) {
  return *msg->_impl_.action_;
}
void whiteboardPacket::clear_action() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.action_ != nullptr) _impl_.action_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
whiteboardPacket::whiteboardPacket(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.whiteboardPacket)
}
inline PROTOBUF_NDEBUG_INLINE whiteboardPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

whiteboardPacket::whiteboardPacket(
    ::google::protobuf::Arena* arena,
    const whiteboardPacket& from)
    : ::google::protobuf::Message(arena) {
  whiteboardPacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.action_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf::PacketAction>(arena, *from._impl_.action_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, version_),
           offsetof(Impl_, packet_id_) -
               offsetof(Impl_, version_) +
               sizeof(Impl_::packet_id_));

  // @@protoc_insertion_point(copy_constructor:protobuf.whiteboardPacket)
}
inline PROTOBUF_NDEBUG_INLINE whiteboardPacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void whiteboardPacket::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_),
           0,
           offsetof(Impl_, packet_id_) -
               offsetof(Impl_, action_) +
               sizeof(Impl_::packet_id_));
}
whiteboardPacket::~whiteboardPacket() {
  // @@protoc_insertion_point(destructor:protobuf.whiteboardPacket)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void whiteboardPacket::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.action_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void whiteboardPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.whiteboardPacket)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.action_ != nullptr);
    _impl_.action_->Clear();
  }
  ::memset(&_impl_.version_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.packet_id_) -
      reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.packet_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* whiteboardPacket::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> whiteboardPacket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_whiteboardPacket_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .protobuf.PacketAction action = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.action_)}},
    // uint32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(whiteboardPacket, _impl_.version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.version_)}},
    // uint32 packet_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(whiteboardPacket, _impl_.packet_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.packet_type_)}},
    // uint32 packet_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(whiteboardPacket, _impl_.packet_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.packet_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 version = 1;
    {PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 packet_type = 2;
    {PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.packet_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 packet_id = 3;
    {PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.packet_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .protobuf.PacketAction action = 4;
    {PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.action_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf::PacketAction>()},
  }}, {{
  }},
};

::uint8_t* whiteboardPacket::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.whiteboardPacket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_version(), target);
  }

  // uint32 packet_type = 2;
  if (this->_internal_packet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_packet_type(), target);
  }

  // uint32 packet_id = 3;
  if (this->_internal_packet_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_packet_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .protobuf.PacketAction action = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::action(this),
        _Internal::action(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.whiteboardPacket)
  return target;
}

::size_t whiteboardPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.whiteboardPacket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protobuf.PacketAction action = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.action_);
  }

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_version());
  }

  // uint32 packet_type = 2;
  if (this->_internal_packet_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_packet_type());
  }

  // uint32 packet_id = 3;
  if (this->_internal_packet_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_packet_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData whiteboardPacket::_class_data_ = {
    whiteboardPacket::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* whiteboardPacket::GetClassData() const {
  return &_class_data_;
}

void whiteboardPacket::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<whiteboardPacket*>(&to_msg);
  auto& from = static_cast<const whiteboardPacket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.whiteboardPacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_action()->::protobuf::PacketAction::MergeFrom(
        from._internal_action());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_packet_type() != 0) {
    _this->_internal_set_packet_type(from._internal_packet_type());
  }
  if (from._internal_packet_id() != 0) {
    _this->_internal_set_packet_id(from._internal_packet_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void whiteboardPacket::CopyFrom(const whiteboardPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.whiteboardPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool whiteboardPacket::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* whiteboardPacket::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void whiteboardPacket::InternalSwap(whiteboardPacket* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.packet_id_)
      + sizeof(whiteboardPacket::_impl_.packet_id_)
      - PROTOBUF_FIELD_OFFSET(whiteboardPacket, _impl_.action_)>(
          reinterpret_cast<char*>(&_impl_.action_),
          reinterpret_cast<char*>(&other->_impl_.action_));
}

::google::protobuf::Metadata whiteboardPacket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_packet_2eproto_getter, &descriptor_table_packet_2eproto_once,
      file_level_metadata_packet_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
